## Mount /etc/dovecot to manage this file

listen = *

hostname = mx
postmaster_address = postmaster@example.com

doveadm_password = secret
doveadm_port = 12345

mail_uid = vmail
mail_gid = vmail
mail_home = /srv/mail/%d/%n
mail_location = maildir:~/Maildir:LAYOUT=fs:INDEX=~/indexes

protocols = imap submission sieve lmtp
mail_plugins = $mail_plugins notify replication virtual fts fts_flatcurve quota acl

ssl = required
ssl_prefer_server_ciphers = yes
ssl_cert = </etc/dovecot/cert.pem
ssl_key = </etc/dovecot/key.pem
ssl_cipher_list=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

quota_full_tempfail = yes
lmtp_rcpt_check_quota = yes
lmtp_save_to_detail_mailbox = yes

userdb {
  driver = passwd-file
  args = /etc/dovecot/users
  override_fields = uid=vmail gid=vmail home=/srv/mail/%d/%n
}

passdb {
  driver = passwd-file
  args = scheme=CRYPT username_format=%u /etc/dovecot/users
}

namespace inbox {
  inbox = yes
  separator = /
  mailbox Drafts {
    auto = subscribe
    special_use = \Drafts
  }
  mailbox Junk {
   auto = subscribe
   special_use = \Junk
 }
 mailbox Trash {
   auto = subscribe
   special_use = \Trash
 }
 mailbox Sent {
   auto = subscribe
   special_use = \Sent
 }
 mailbox Archive {
   auto = subscribe
   special_use = \Archive
 }
}

namespace {
  type = shared
  separator = /
  prefix = Shared/%%u/
  location = maildir:%%h/Maildir:INDEXPVT=~/Maildir/shared/%%u
  subscriptions = no
  list = yes
}

namespace virtual {
  prefix = Virtual/
  separator = /
  location = virtual:/etc/dovecot/virtual:INDEX=~/virtual
}

namespace {
  type = public
  separator = /
  prefix = Public/
  location = maildir:/srv/mail/public
  subscriptions = no
}

protocol imap {
  auth_mechanisms = $auth_mechanisms plain login
  mail_max_userip_connections = 30
  imap_client_workarounds = delay-newmail tb-extra-mailbox-sep
  mail_plugins = $mail_plugins imap_sieve imap_quota imap_acl
}

protocol lmtp {
  mail_plugins = $mail_plugins sieve
}

protocol !indexer-worker {
  mail_vsize_bg_after_count = 100
}

plugin {
  fts = flatcurve
  fts_autoindex = yes
  fts_enforced = yes
  fts_filters = normalizer-icu snowball stopwords
  fts_filters_en = lowercase snowball english-possessive stopwords
  fts_flatcurve_substring_search = yes
  fts_index_timeout = 60s
  fts_languages = en
  fts_tokenizer_generic = algorithm=simple
  fts_tokenizers = generic email-address

  mail_replica = remote:vmail@mx2@example.com

  sieve_plugins = sieve_imapsieve sieve_extprograms
  sieve_extensions = +editheader +mboxmetadata +servermetadata +imapflags +notify +spamtest +spamtestplus +virustest
  sieve_global_extensions = +vnd.dovecot.pipe +vnd.dovecot.environment
  sieve_pipe_bin_dir = /usr/lib/dovecot/sieve
  sieve_before = /usr/lib/dovecot/sieve/global-spam.sieve
  sieve=~/.dovecot.sieve
  sieve_dir=~/sieve

  # From elsewhere to Spam folder
  imapsieve_mailbox1_name = Junk
  imapsieve_mailbox1_causes = COPY
  imapsieve_mailbox1_before = file:/usr/lib/dovecot/sieve/learn-spam.sieve

  # From Spam folder to elsewhere
  imapsieve_mailbox2_name = *
  imapsieve_mailbox2_from = Junk
  imapsieve_mailbox2_causes = COPY
  imapsieve_mailbox2_before = file:/usr/lib/dovecot/sieve/learn-ham.sieve

  ##
  # rspamd:
  #
  # X-Spamd-Result: default: False [0.00 / 150.00]; ...
  # X-Spam: Yes

  ##
  # rspamd score based
  #
  # WARNING: the max score provided by rspamd is the maximum score
  # rspamd cares about, e.g. the score required for reject, not
  # necessarily the one for add_header, and therefore not a good
  # baseline for what should be considered "100%" spam.
  #
  ##
  sieve_spamtest_status_type = score
  sieve_spamtest_status_header = X-Spamd-Result: .*? \[([[:digit:]]+\.[[:digit:]]+) / [[:digit:]]+\.[[:digit:]]+\];
  ### best to use the same value as for `add_header` in rspamd
  sieve_spamtest_max_value = 6
  ### can read the "max score" from rspamd, but see warning above
  ## sieve_spamtest_max_header = X-Spamd-Result: .*? \[[[:digit:]]+\.[[:digit:]]+ / ([[:digit:]]+\.[[:digit:]]+)\];

  ##
  # Yes/No based
  #
  ##
  # sieve_spamtest_status_type = text
  # sieve_spamtest_status_header = X-Spam
  # sieve_spamtest_text_value1 = No
  # sieve_spamtest_text_value10 = Yes

  quota = count:User quota
  quota_rule = *:storage=1G
  quota_rule2 = Trash:storage=+100M
  quota_vsizes = yes
  quota_grace = 50M
  quota_max_mail_size = 100M
  quota_exceeded_message = Quota exceeded
  quota_warning = storage=95%% quota-warning 95 %u
  quota_warning2 = storage=80%% quota-warning 80 %u
  quota_warning3 = -storage=100%% quota-warning below %u # user is no longer over quota
  quota_status_success = DUNNO
  quota_status_nouser = DUNNO
  quota_status_overquota = "552 5.2.2 Mailbox is full"

  acl = vfile
  acl_shared_dict = file:/var/lib/dovecot/db/shared-mailboxes.db
}

service quota-status {
  executable = quota-status -p postfix
  inet_listener {
    port = 12340
  }
  client_limit = 1
}

service quota-warning {
  executable = script /usr/local/bin/quota-warning.sh
  user = vmail
  unix_listener quota-warning {
  }
}

service lmtp {
  user = vmail
  inet_listener lmtp {
    port = 24
  }
}

service auth {
  inet_listener {
    port = 10010
  }
}

service doveadm {
  inet_listener {
    port = 12345
  }
}

dsync_remote_cmd = ssh -l%{login} %{host} doveadm dsync-server -u%u
service aggregator {
  user = vmail
  fifo_listener replication-notify-fifo {
    user = vmail
  }
  unix_listener replication-notify {
    user = vmail
  }
}

service replicator {
  process_min_avail = 1
  unix_listener replicator-doveadm {
    mode = 0600
  }
}

# Log to stdout for docker
log_path=/dev/stdout
info_log_path=/dev/stdout
debug_log_path=/dev/stdout

## Debug configuration
# mail_debug = yes
# auth_verbose = yes
# auth_debug = yes
# verbose_proctitle = yes
# log_debug = category=fts
